// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package solidserver

import (
	"context"
	"reflect"

	"github.com/AthenaWolfe/pulumi-solidserver/sdk/go/solidserver/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IPv6 address data-source allows to retrieve information about reserved IPv6 addresses including meta-data.
func LookupIp6Address(ctx *pulumi.Context, args *LookupIp6AddressArgs, opts ...pulumi.InvokeOption) (*LookupIp6AddressResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIp6AddressResult
	err := ctx.Invoke("solidserver:index/getIp6Address:getIp6Address", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIp6Address.
type LookupIp6AddressArgs struct {
	// The IPv6 address.
	Address string `pulumi:"address"`
	// The name of the space of the IPv6 address.
	Space string `pulumi:"space"`
}

// A collection of values returned by getIp6Address.
type LookupIp6AddressResult struct {
	// The IPv6 address.
	Address string `pulumi:"address"`
	// The class associated to the IPv6 address.
	Class string `pulumi:"class"`
	// The class parameters associated to the IPv6 address.
	ClassParameters map[string]interface{} `pulumi:"classParameters"`
	// Device Name associated to the IPv6 address (Require a 'Device Manager' license).
	Device string `pulumi:"device"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The MAC Address of the IPv6 address.
	Mac string `pulumi:"mac"`
	// The short name or FQDN of the IPv6 address.
	Name string `pulumi:"name"`
	// The name of the pool of the IPv6 address.
	Pool string `pulumi:"pool"`
	// The IPv6 address prefix.
	Prefix string `pulumi:"prefix"`
	// The prefixLength associated to the IPv6 address.
	PrefixSize int `pulumi:"prefixSize"`
	// The name of the space of the IPv6 address.
	Space string `pulumi:"space"`
	// The name of the subnet of the IPv6 address.
	Subnet string `pulumi:"subnet"`
}

func LookupIp6AddressOutput(ctx *pulumi.Context, args LookupIp6AddressOutputArgs, opts ...pulumi.InvokeOption) LookupIp6AddressResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIp6AddressResult, error) {
			args := v.(LookupIp6AddressArgs)
			r, err := LookupIp6Address(ctx, &args, opts...)
			var s LookupIp6AddressResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIp6AddressResultOutput)
}

// A collection of arguments for invoking getIp6Address.
type LookupIp6AddressOutputArgs struct {
	// The IPv6 address.
	Address pulumi.StringInput `pulumi:"address"`
	// The name of the space of the IPv6 address.
	Space pulumi.StringInput `pulumi:"space"`
}

func (LookupIp6AddressOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIp6AddressArgs)(nil)).Elem()
}

// A collection of values returned by getIp6Address.
type LookupIp6AddressResultOutput struct{ *pulumi.OutputState }

func (LookupIp6AddressResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIp6AddressResult)(nil)).Elem()
}

func (o LookupIp6AddressResultOutput) ToLookupIp6AddressResultOutput() LookupIp6AddressResultOutput {
	return o
}

func (o LookupIp6AddressResultOutput) ToLookupIp6AddressResultOutputWithContext(ctx context.Context) LookupIp6AddressResultOutput {
	return o
}

// The IPv6 address.
func (o LookupIp6AddressResultOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Address }).(pulumi.StringOutput)
}

// The class associated to the IPv6 address.
func (o LookupIp6AddressResultOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Class }).(pulumi.StringOutput)
}

// The class parameters associated to the IPv6 address.
func (o LookupIp6AddressResultOutput) ClassParameters() pulumi.MapOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) map[string]interface{} { return v.ClassParameters }).(pulumi.MapOutput)
}

// Device Name associated to the IPv6 address (Require a 'Device Manager' license).
func (o LookupIp6AddressResultOutput) Device() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Device }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIp6AddressResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Id }).(pulumi.StringOutput)
}

// The MAC Address of the IPv6 address.
func (o LookupIp6AddressResultOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Mac }).(pulumi.StringOutput)
}

// The short name or FQDN of the IPv6 address.
func (o LookupIp6AddressResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Name }).(pulumi.StringOutput)
}

// The name of the pool of the IPv6 address.
func (o LookupIp6AddressResultOutput) Pool() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Pool }).(pulumi.StringOutput)
}

// The IPv6 address prefix.
func (o LookupIp6AddressResultOutput) Prefix() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Prefix }).(pulumi.StringOutput)
}

// The prefixLength associated to the IPv6 address.
func (o LookupIp6AddressResultOutput) PrefixSize() pulumi.IntOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) int { return v.PrefixSize }).(pulumi.IntOutput)
}

// The name of the space of the IPv6 address.
func (o LookupIp6AddressResultOutput) Space() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Space }).(pulumi.StringOutput)
}

// The name of the subnet of the IPv6 address.
func (o LookupIp6AddressResultOutput) Subnet() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIp6AddressResult) string { return v.Subnet }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIp6AddressResultOutput{})
}
