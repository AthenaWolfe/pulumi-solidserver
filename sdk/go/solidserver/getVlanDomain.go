// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package solidserver

import (
	"context"
	"reflect"

	"github.com/AthenaWolfe/pulumi-solidserver/sdk/go/solidserver/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// VLAN domain data-source allows to retrieve information about VLAN Domains, including meta-data.
func LookupVlanDomain(ctx *pulumi.Context, args *LookupVlanDomainArgs, opts ...pulumi.InvokeOption) (*LookupVlanDomainResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupVlanDomainResult
	err := ctx.Invoke("solidserver:index/getVlanDomain:getVlanDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getVlanDomain.
type LookupVlanDomainArgs struct {
	// The name of the VLAN Domain.
	Name string `pulumi:"name"`
}

// A collection of values returned by getVlanDomain.
type LookupVlanDomainResult struct {
	// The class associated to the VLAN Domain.
	Class string `pulumi:"class"`
	// The class parameters associated to VLAN Domain.
	ClassParameters map[string]interface{} `pulumi:"classParameters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the VLAN Domain.
	Name string `pulumi:"name"`
	// Specify if the VLAN Domain is a VXLAN Domain.
	Vxlan bool `pulumi:"vxlan"`
}

func LookupVlanDomainOutput(ctx *pulumi.Context, args LookupVlanDomainOutputArgs, opts ...pulumi.InvokeOption) LookupVlanDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupVlanDomainResult, error) {
			args := v.(LookupVlanDomainArgs)
			r, err := LookupVlanDomain(ctx, &args, opts...)
			var s LookupVlanDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupVlanDomainResultOutput)
}

// A collection of arguments for invoking getVlanDomain.
type LookupVlanDomainOutputArgs struct {
	// The name of the VLAN Domain.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupVlanDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVlanDomainArgs)(nil)).Elem()
}

// A collection of values returned by getVlanDomain.
type LookupVlanDomainResultOutput struct{ *pulumi.OutputState }

func (LookupVlanDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupVlanDomainResult)(nil)).Elem()
}

func (o LookupVlanDomainResultOutput) ToLookupVlanDomainResultOutput() LookupVlanDomainResultOutput {
	return o
}

func (o LookupVlanDomainResultOutput) ToLookupVlanDomainResultOutputWithContext(ctx context.Context) LookupVlanDomainResultOutput {
	return o
}

// The class associated to the VLAN Domain.
func (o LookupVlanDomainResultOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVlanDomainResult) string { return v.Class }).(pulumi.StringOutput)
}

// The class parameters associated to VLAN Domain.
func (o LookupVlanDomainResultOutput) ClassParameters() pulumi.MapOutput {
	return o.ApplyT(func(v LookupVlanDomainResult) map[string]interface{} { return v.ClassParameters }).(pulumi.MapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupVlanDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVlanDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the VLAN Domain.
func (o LookupVlanDomainResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupVlanDomainResult) string { return v.Name }).(pulumi.StringOutput)
}

// Specify if the VLAN Domain is a VXLAN Domain.
func (o LookupVlanDomainResultOutput) Vxlan() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupVlanDomainResult) bool { return v.Vxlan }).(pulumi.BoolOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupVlanDomainResultOutput{})
}
