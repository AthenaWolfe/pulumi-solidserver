// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package solidserver

import (
	"context"
	"reflect"

	"github.com/AthenaWolfe/pulumi-solidserver/sdk/go/solidserver/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Space data-source allows to retrieve information about reserved IP spaces, including meta-data.
// Spaces are the highest level objets in the SOLIDserver's IPAM module organization,
// the entry point of any IPv4 or IPv6 addressing plan. It allows to manage unique ranges
// of IP addresses.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/AthenaWolfe/pulumi-solidserver/sdk/go/solidserver"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := solidserver.LookupIpSpace(ctx, &solidserver.LookupIpSpaceArgs{
//				Name: solidserver_ip_space.MyFirstSpace.Name,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupIpSpace(ctx *pulumi.Context, args *LookupIpSpaceArgs, opts ...pulumi.InvokeOption) (*LookupIpSpaceResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupIpSpaceResult
	err := ctx.Invoke("solidserver:index/getIpSpace:getIpSpace", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIpSpace.
type LookupIpSpaceArgs struct {
	// The name of the IP space.
	Name string `pulumi:"name"`
}

// A collection of values returned by getIpSpace.
type LookupIpSpaceResult struct {
	// The class associated to the IP space.
	Class string `pulumi:"class"`
	// The class parameters associated to IP space.
	ClassParameters map[string]interface{} `pulumi:"classParameters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the IP space.
	Name string `pulumi:"name"`
}

func LookupIpSpaceOutput(ctx *pulumi.Context, args LookupIpSpaceOutputArgs, opts ...pulumi.InvokeOption) LookupIpSpaceResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupIpSpaceResult, error) {
			args := v.(LookupIpSpaceArgs)
			r, err := LookupIpSpace(ctx, &args, opts...)
			var s LookupIpSpaceResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupIpSpaceResultOutput)
}

// A collection of arguments for invoking getIpSpace.
type LookupIpSpaceOutputArgs struct {
	// The name of the IP space.
	Name pulumi.StringInput `pulumi:"name"`
}

func (LookupIpSpaceOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpSpaceArgs)(nil)).Elem()
}

// A collection of values returned by getIpSpace.
type LookupIpSpaceResultOutput struct{ *pulumi.OutputState }

func (LookupIpSpaceResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupIpSpaceResult)(nil)).Elem()
}

func (o LookupIpSpaceResultOutput) ToLookupIpSpaceResultOutput() LookupIpSpaceResultOutput {
	return o
}

func (o LookupIpSpaceResultOutput) ToLookupIpSpaceResultOutputWithContext(ctx context.Context) LookupIpSpaceResultOutput {
	return o
}

// The class associated to the IP space.
func (o LookupIpSpaceResultOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpSpaceResult) string { return v.Class }).(pulumi.StringOutput)
}

// The class parameters associated to IP space.
func (o LookupIpSpaceResultOutput) ClassParameters() pulumi.MapOutput {
	return o.ApplyT(func(v LookupIpSpaceResult) map[string]interface{} { return v.ClassParameters }).(pulumi.MapOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupIpSpaceResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpSpaceResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the IP space.
func (o LookupIpSpaceResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupIpSpaceResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupIpSpaceResultOutput{})
}
