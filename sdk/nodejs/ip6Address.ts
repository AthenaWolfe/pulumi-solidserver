// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * IPv6 address resource allows to create and manage reserved addresses for specific devices, apps or users.
 * More importantly it allows to store useful meta-data for both tracking and automation purposes.
 */
export class Ip6Address extends pulumi.CustomResource {
    /**
     * Get an existing Ip6Address resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ip6AddressState, opts?: pulumi.CustomResourceOptions): Ip6Address {
        return new Ip6Address(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solidserver:index/ip6Address:Ip6Address';

    /**
     * Returns true if the given object is an instance of Ip6Address.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ip6Address {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ip6Address.__pulumiType;
    }

    /**
     * The provisionned IPv6 address.
     */
    public /*out*/ readonly address!: pulumi.Output<string>;
    /**
     * The class associated to the IPv6 address.
     */
    public readonly class!: pulumi.Output<string | undefined>;
    /**
     * The class parameters associated to the IPv6 address.
     */
    public readonly classParameters!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Device Name to associate with the IPv6 address (Require a 'Device Manager' license).
     */
    public readonly device!: pulumi.Output<string | undefined>;
    /**
     * The MAC Address of the IPv6 address to create.
     */
    public readonly mac!: pulumi.Output<string | undefined>;
    /**
     * The short name or FQDN of the IPv6 address to create.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The name of the pool into which creating the IPv6 address.
     */
    public readonly pool!: pulumi.Output<string | undefined>;
    /**
     * The optionally requested IPv6 address.
     */
    public readonly requestIp!: pulumi.Output<string | undefined>;
    /**
     * The name of the space into which creating the IPv6 address.
     */
    public readonly space!: pulumi.Output<string>;
    /**
     * The name of the subnet into which creating the IPv6 address.
     */
    public readonly subnet!: pulumi.Output<string>;

    /**
     * Create a Ip6Address resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ip6AddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ip6AddressArgs | Ip6AddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ip6AddressState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["class"] = state ? state.class : undefined;
            resourceInputs["classParameters"] = state ? state.classParameters : undefined;
            resourceInputs["device"] = state ? state.device : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["pool"] = state ? state.pool : undefined;
            resourceInputs["requestIp"] = state ? state.requestIp : undefined;
            resourceInputs["space"] = state ? state.space : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
        } else {
            const args = argsOrState as Ip6AddressArgs | undefined;
            if ((!args || args.space === undefined) && !opts.urn) {
                throw new Error("Missing required property 'space'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            resourceInputs["class"] = args ? args.class : undefined;
            resourceInputs["classParameters"] = args ? args.classParameters : undefined;
            resourceInputs["device"] = args ? args.device : undefined;
            resourceInputs["mac"] = args ? args.mac : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["pool"] = args ? args.pool : undefined;
            resourceInputs["requestIp"] = args ? args.requestIp : undefined;
            resourceInputs["space"] = args ? args.space : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["address"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ip6Address.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ip6Address resources.
 */
export interface Ip6AddressState {
    /**
     * The provisionned IPv6 address.
     */
    address?: pulumi.Input<string>;
    /**
     * The class associated to the IPv6 address.
     */
    class?: pulumi.Input<string>;
    /**
     * The class parameters associated to the IPv6 address.
     */
    classParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Device Name to associate with the IPv6 address (Require a 'Device Manager' license).
     */
    device?: pulumi.Input<string>;
    /**
     * The MAC Address of the IPv6 address to create.
     */
    mac?: pulumi.Input<string>;
    /**
     * The short name or FQDN of the IPv6 address to create.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the pool into which creating the IPv6 address.
     */
    pool?: pulumi.Input<string>;
    /**
     * The optionally requested IPv6 address.
     */
    requestIp?: pulumi.Input<string>;
    /**
     * The name of the space into which creating the IPv6 address.
     */
    space?: pulumi.Input<string>;
    /**
     * The name of the subnet into which creating the IPv6 address.
     */
    subnet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ip6Address resource.
 */
export interface Ip6AddressArgs {
    /**
     * The class associated to the IPv6 address.
     */
    class?: pulumi.Input<string>;
    /**
     * The class parameters associated to the IPv6 address.
     */
    classParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Device Name to associate with the IPv6 address (Require a 'Device Manager' license).
     */
    device?: pulumi.Input<string>;
    /**
     * The MAC Address of the IPv6 address to create.
     */
    mac?: pulumi.Input<string>;
    /**
     * The short name or FQDN of the IPv6 address to create.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the pool into which creating the IPv6 address.
     */
    pool?: pulumi.Input<string>;
    /**
     * The optionally requested IPv6 address.
     */
    requestIp?: pulumi.Input<string>;
    /**
     * The name of the space into which creating the IPv6 address.
     */
    space: pulumi.Input<string>;
    /**
     * The name of the subnet into which creating the IPv6 address.
     */
    subnet: pulumi.Input<string>;
}
