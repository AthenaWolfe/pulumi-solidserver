// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * IPv6 Pool resource allows to create and manage ranges of IPv6 addresses for specific usage such as: provisioning,
 * planning or migrations. IPv6 Pools can also be used to delegate one or several ranges of IPv6 addresses to groups
 * of administrators or to restrict access to some users.
 */
export class Ip6Pool extends pulumi.CustomResource {
    /**
     * Get an existing Ip6Pool resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ip6PoolState, opts?: pulumi.CustomResourceOptions): Ip6Pool {
        return new Ip6Pool(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solidserver:index/ip6Pool:Ip6Pool';

    /**
     * Returns true if the given object is an instance of Ip6Pool.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ip6Pool {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ip6Pool.__pulumiType;
    }

    /**
     * The class associated to the IPv6 pool.
     */
    public readonly class!: pulumi.Output<string | undefined>;
    /**
     * The class parameters associated to the IPv6 pool.
     */
    public readonly classParameters!: pulumi.Output<{[key: string]: string} | undefined>;
    /**
     * Specify wether to create the equivalent DHCP v6 range, or not (Default: false).
     */
    public readonly dhcpRange!: pulumi.Output<boolean | undefined>;
    /**
     * The IPv6 pool's higher IPv6 address.
     */
    public readonly end!: pulumi.Output<string>;
    /**
     * The name of the IPv6 pool to create.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The prefix of the parent subnet of the pool.
     */
    public /*out*/ readonly prefix!: pulumi.Output<string>;
    /**
     * The size prefix of the parent subnet of the pool.
     */
    public /*out*/ readonly prefixSize!: pulumi.Output<number>;
    /**
     * The name of the space into which creating the IPv6 pool.
     */
    public readonly space!: pulumi.Output<string>;
    /**
     * The IPv6 pool's lower IPv6 address.
     */
    public readonly start!: pulumi.Output<string>;
    /**
     * The name of the parent IP subnet into which creating the IPv6 pool.
     */
    public readonly subnet!: pulumi.Output<string>;

    /**
     * Create a Ip6Pool resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ip6PoolArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ip6PoolArgs | Ip6PoolState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ip6PoolState | undefined;
            resourceInputs["class"] = state ? state.class : undefined;
            resourceInputs["classParameters"] = state ? state.classParameters : undefined;
            resourceInputs["dhcpRange"] = state ? state.dhcpRange : undefined;
            resourceInputs["end"] = state ? state.end : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["prefix"] = state ? state.prefix : undefined;
            resourceInputs["prefixSize"] = state ? state.prefixSize : undefined;
            resourceInputs["space"] = state ? state.space : undefined;
            resourceInputs["start"] = state ? state.start : undefined;
            resourceInputs["subnet"] = state ? state.subnet : undefined;
        } else {
            const args = argsOrState as Ip6PoolArgs | undefined;
            if ((!args || args.end === undefined) && !opts.urn) {
                throw new Error("Missing required property 'end'");
            }
            if ((!args || args.space === undefined) && !opts.urn) {
                throw new Error("Missing required property 'space'");
            }
            if ((!args || args.start === undefined) && !opts.urn) {
                throw new Error("Missing required property 'start'");
            }
            if ((!args || args.subnet === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnet'");
            }
            resourceInputs["class"] = args ? args.class : undefined;
            resourceInputs["classParameters"] = args ? args.classParameters : undefined;
            resourceInputs["dhcpRange"] = args ? args.dhcpRange : undefined;
            resourceInputs["end"] = args ? args.end : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["space"] = args ? args.space : undefined;
            resourceInputs["start"] = args ? args.start : undefined;
            resourceInputs["subnet"] = args ? args.subnet : undefined;
            resourceInputs["prefix"] = undefined /*out*/;
            resourceInputs["prefixSize"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ip6Pool.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ip6Pool resources.
 */
export interface Ip6PoolState {
    /**
     * The class associated to the IPv6 pool.
     */
    class?: pulumi.Input<string>;
    /**
     * The class parameters associated to the IPv6 pool.
     */
    classParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify wether to create the equivalent DHCP v6 range, or not (Default: false).
     */
    dhcpRange?: pulumi.Input<boolean>;
    /**
     * The IPv6 pool's higher IPv6 address.
     */
    end?: pulumi.Input<string>;
    /**
     * The name of the IPv6 pool to create.
     */
    name?: pulumi.Input<string>;
    /**
     * The prefix of the parent subnet of the pool.
     */
    prefix?: pulumi.Input<string>;
    /**
     * The size prefix of the parent subnet of the pool.
     */
    prefixSize?: pulumi.Input<number>;
    /**
     * The name of the space into which creating the IPv6 pool.
     */
    space?: pulumi.Input<string>;
    /**
     * The IPv6 pool's lower IPv6 address.
     */
    start?: pulumi.Input<string>;
    /**
     * The name of the parent IP subnet into which creating the IPv6 pool.
     */
    subnet?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ip6Pool resource.
 */
export interface Ip6PoolArgs {
    /**
     * The class associated to the IPv6 pool.
     */
    class?: pulumi.Input<string>;
    /**
     * The class parameters associated to the IPv6 pool.
     */
    classParameters?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Specify wether to create the equivalent DHCP v6 range, or not (Default: false).
     */
    dhcpRange?: pulumi.Input<boolean>;
    /**
     * The IPv6 pool's higher IPv6 address.
     */
    end: pulumi.Input<string>;
    /**
     * The name of the IPv6 pool to create.
     */
    name?: pulumi.Input<string>;
    /**
     * The name of the space into which creating the IPv6 pool.
     */
    space: pulumi.Input<string>;
    /**
     * The IPv6 pool's lower IPv6 address.
     */
    start: pulumi.Input<string>;
    /**
     * The name of the parent IP subnet into which creating the IPv6 pool.
     */
    subnet: pulumi.Input<string>;
}
