// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Custom DB Data resource allows to create and manage custom database entries stored within SOLIDserver.
 * This custom database entries can be leveraged within object classes and wizards in order to store custom meta-data.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as solidserver from "@pulumi/solidserver";
 *
 * const myFirstCustomData = new solidserver.CdbData("myFirstCustomData", {
 *     customDb: "myFirstCustomDB",
 *     value1: "FR",
 *     value2: "France",
 * });
 * ```
 */
export class CdbData extends pulumi.CustomResource {
    /**
     * Get an existing CdbData resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CdbDataState, opts?: pulumi.CustomResourceOptions): CdbData {
        return new CdbData(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solidserver:index/cdbData:CdbData';

    /**
     * Returns true if the given object is an instance of CdbData.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CdbData {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CdbData.__pulumiType;
    }

    /**
     * The name of the Custom DB into which creating the data.
     */
    public readonly customDb!: pulumi.Output<string>;
    /**
     * The value 1 (key of the data)
     */
    public readonly value1!: pulumi.Output<string>;
    /**
     * The value 10
     */
    public readonly value10!: pulumi.Output<string | undefined>;
    /**
     * The value 2
     */
    public readonly value2!: pulumi.Output<string | undefined>;
    /**
     * The value 3
     */
    public readonly value3!: pulumi.Output<string | undefined>;
    /**
     * The value 4
     */
    public readonly value4!: pulumi.Output<string | undefined>;
    /**
     * The value 5
     */
    public readonly value5!: pulumi.Output<string | undefined>;
    /**
     * The value 6
     */
    public readonly value6!: pulumi.Output<string | undefined>;
    /**
     * The value 7
     */
    public readonly value7!: pulumi.Output<string | undefined>;
    /**
     * The value 8
     */
    public readonly value8!: pulumi.Output<string | undefined>;
    /**
     * The value 9
     */
    public readonly value9!: pulumi.Output<string | undefined>;

    /**
     * Create a CdbData resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CdbDataArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CdbDataArgs | CdbDataState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CdbDataState | undefined;
            resourceInputs["customDb"] = state ? state.customDb : undefined;
            resourceInputs["value1"] = state ? state.value1 : undefined;
            resourceInputs["value10"] = state ? state.value10 : undefined;
            resourceInputs["value2"] = state ? state.value2 : undefined;
            resourceInputs["value3"] = state ? state.value3 : undefined;
            resourceInputs["value4"] = state ? state.value4 : undefined;
            resourceInputs["value5"] = state ? state.value5 : undefined;
            resourceInputs["value6"] = state ? state.value6 : undefined;
            resourceInputs["value7"] = state ? state.value7 : undefined;
            resourceInputs["value8"] = state ? state.value8 : undefined;
            resourceInputs["value9"] = state ? state.value9 : undefined;
        } else {
            const args = argsOrState as CdbDataArgs | undefined;
            if ((!args || args.customDb === undefined) && !opts.urn) {
                throw new Error("Missing required property 'customDb'");
            }
            if ((!args || args.value1 === undefined) && !opts.urn) {
                throw new Error("Missing required property 'value1'");
            }
            resourceInputs["customDb"] = args ? args.customDb : undefined;
            resourceInputs["value1"] = args ? args.value1 : undefined;
            resourceInputs["value10"] = args ? args.value10 : undefined;
            resourceInputs["value2"] = args ? args.value2 : undefined;
            resourceInputs["value3"] = args ? args.value3 : undefined;
            resourceInputs["value4"] = args ? args.value4 : undefined;
            resourceInputs["value5"] = args ? args.value5 : undefined;
            resourceInputs["value6"] = args ? args.value6 : undefined;
            resourceInputs["value7"] = args ? args.value7 : undefined;
            resourceInputs["value8"] = args ? args.value8 : undefined;
            resourceInputs["value9"] = args ? args.value9 : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CdbData.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CdbData resources.
 */
export interface CdbDataState {
    /**
     * The name of the Custom DB into which creating the data.
     */
    customDb?: pulumi.Input<string>;
    /**
     * The value 1 (key of the data)
     */
    value1?: pulumi.Input<string>;
    /**
     * The value 10
     */
    value10?: pulumi.Input<string>;
    /**
     * The value 2
     */
    value2?: pulumi.Input<string>;
    /**
     * The value 3
     */
    value3?: pulumi.Input<string>;
    /**
     * The value 4
     */
    value4?: pulumi.Input<string>;
    /**
     * The value 5
     */
    value5?: pulumi.Input<string>;
    /**
     * The value 6
     */
    value6?: pulumi.Input<string>;
    /**
     * The value 7
     */
    value7?: pulumi.Input<string>;
    /**
     * The value 8
     */
    value8?: pulumi.Input<string>;
    /**
     * The value 9
     */
    value9?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CdbData resource.
 */
export interface CdbDataArgs {
    /**
     * The name of the Custom DB into which creating the data.
     */
    customDb: pulumi.Input<string>;
    /**
     * The value 1 (key of the data)
     */
    value1: pulumi.Input<string>;
    /**
     * The value 10
     */
    value10?: pulumi.Input<string>;
    /**
     * The value 2
     */
    value2?: pulumi.Input<string>;
    /**
     * The value 3
     */
    value3?: pulumi.Input<string>;
    /**
     * The value 4
     */
    value4?: pulumi.Input<string>;
    /**
     * The value 5
     */
    value5?: pulumi.Input<string>;
    /**
     * The value 6
     */
    value6?: pulumi.Input<string>;
    /**
     * The value 7
     */
    value7?: pulumi.Input<string>;
    /**
     * The value 8
     */
    value8?: pulumi.Input<string>;
    /**
     * The value 9
     */
    value9?: pulumi.Input<string>;
}
