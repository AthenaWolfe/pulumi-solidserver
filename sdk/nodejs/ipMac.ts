// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * IP MAC resource allows to map an IP address with a MAC address.
 * It does not reflect any object within SOLIDserver, it is useful when provisioning
 * IP addresses for VM(s) for which the MAC address is unknown until deployed.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as solidserver from "@pulumi/solidserver";
 *
 * const myFirstIPMacAassoc = new solidserver.IpMac("myFirstIPMacAassoc", {
 *     address: solidserver_ip_address.myFirstIPAddress.address,
 *     mac: "00:11:22:33:44:55",
 *     space: solidserver_ip_space.myFirstSpace.name,
 * });
 * ```
 */
export class IpMac extends pulumi.CustomResource {
    /**
     * Get an existing IpMac resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpMacState, opts?: pulumi.CustomResourceOptions): IpMac {
        return new IpMac(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'solidserver:index/ipMac:IpMac';

    /**
     * Returns true if the given object is an instance of IpMac.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpMac {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpMac.__pulumiType;
    }

    /**
     * The IP address to map with the MAC address.
     */
    public readonly address!: pulumi.Output<string>;
    /**
     * The MAC Address o map with the IP address.
     */
    public readonly mac!: pulumi.Output<string>;
    /**
     * The name of the space into which mapping the IP and the MAC address.
     */
    public readonly space!: pulumi.Output<string>;

    /**
     * Create a IpMac resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpMacArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpMacArgs | IpMacState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpMacState | undefined;
            resourceInputs["address"] = state ? state.address : undefined;
            resourceInputs["mac"] = state ? state.mac : undefined;
            resourceInputs["space"] = state ? state.space : undefined;
        } else {
            const args = argsOrState as IpMacArgs | undefined;
            if ((!args || args.address === undefined) && !opts.urn) {
                throw new Error("Missing required property 'address'");
            }
            if ((!args || args.mac === undefined) && !opts.urn) {
                throw new Error("Missing required property 'mac'");
            }
            if ((!args || args.space === undefined) && !opts.urn) {
                throw new Error("Missing required property 'space'");
            }
            resourceInputs["address"] = args ? args.address : undefined;
            resourceInputs["mac"] = args ? args.mac : undefined;
            resourceInputs["space"] = args ? args.space : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpMac.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpMac resources.
 */
export interface IpMacState {
    /**
     * The IP address to map with the MAC address.
     */
    address?: pulumi.Input<string>;
    /**
     * The MAC Address o map with the IP address.
     */
    mac?: pulumi.Input<string>;
    /**
     * The name of the space into which mapping the IP and the MAC address.
     */
    space?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpMac resource.
 */
export interface IpMacArgs {
    /**
     * The IP address to map with the MAC address.
     */
    address: pulumi.Input<string>;
    /**
     * The MAC Address o map with the IP address.
     */
    mac: pulumi.Input<string>;
    /**
     * The name of the space into which mapping the IP and the MAC address.
     */
    space: pulumi.Input<string>;
}
