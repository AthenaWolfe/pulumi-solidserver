// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * IPv6 subnet query data-source allows to retrieve information about the first IPv6 subnet matching given criterias, including its meta-data.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as solidserver from "@pulumi/solidserver";
 *
 * const mySecondIPv6SubnetQueriedData = solidserver.getIp6SubnetQuery({
 *     query: "tag_network_vnid = '12666' AND subnet_allocated_percent < '90.0'",
 *     tags: "network.vnid",
 * });
 * ```
 */
export function getIp6SubnetQuery(args: GetIp6SubnetQueryArgs, opts?: pulumi.InvokeOptions): Promise<GetIp6SubnetQueryResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("solidserver:index/getIp6SubnetQuery:getIp6SubnetQuery", {
        "orderby": args.orderby,
        "query": args.query,
        "tags": args.tags,
    }, opts);
}

/**
 * A collection of arguments for invoking getIp6SubnetQuery.
 */
export interface GetIp6SubnetQueryArgs {
    /**
     * The query used to find the first matching subnet.
     */
    orderby?: string;
    /**
     * The query used to find the first matching subnet.
     */
    query: string;
    /**
     * The tags to be used to find the first matching subnet in the query.
     */
    tags?: string;
}

/**
 * A collection of values returned by getIp6SubnetQuery.
 */
export interface GetIp6SubnetQueryResult {
    /**
     * The IP subnet address.
     */
    readonly address: string;
    /**
     * The class associated to the IPv6 subnet.
     */
    readonly class: string;
    /**
     * The class parameters associated to IPv6 subnet.
     */
    readonly classParameters: {[key: string]: string};
    /**
     * The  IPv6 subnet's computed gateway.
     */
    readonly gateway: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the IPv6 subnet.
     */
    readonly name: string;
    /**
     * The query used to find the first matching subnet.
     */
    readonly orderby?: string;
    /**
     * The IPv6 subnet prefix.
     */
    readonly prefix: string;
    /**
     * The IPv6 subnet's prefix length (ex: 64 for a '/64').
     */
    readonly prefixSize: number;
    /**
     * The query used to find the first matching subnet.
     */
    readonly query: string;
    /**
     * The space associated to the IPv6 subnet.
     */
    readonly space: string;
    /**
     * The tags to be used to find the first matching subnet in the query.
     */
    readonly tags?: string;
    /**
     * The terminal property of the IPv6 subnet.
     */
    readonly terminal: boolean;
}
/**
 * IPv6 subnet query data-source allows to retrieve information about the first IPv6 subnet matching given criterias, including its meta-data.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as solidserver from "@pulumi/solidserver";
 *
 * const mySecondIPv6SubnetQueriedData = solidserver.getIp6SubnetQuery({
 *     query: "tag_network_vnid = '12666' AND subnet_allocated_percent < '90.0'",
 *     tags: "network.vnid",
 * });
 * ```
 */
export function getIp6SubnetQueryOutput(args: GetIp6SubnetQueryOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetIp6SubnetQueryResult> {
    return pulumi.output(args).apply((a: any) => getIp6SubnetQuery(a, opts))
}

/**
 * A collection of arguments for invoking getIp6SubnetQuery.
 */
export interface GetIp6SubnetQueryOutputArgs {
    /**
     * The query used to find the first matching subnet.
     */
    orderby?: pulumi.Input<string>;
    /**
     * The query used to find the first matching subnet.
     */
    query: pulumi.Input<string>;
    /**
     * The tags to be used to find the first matching subnet in the query.
     */
    tags?: pulumi.Input<string>;
}
